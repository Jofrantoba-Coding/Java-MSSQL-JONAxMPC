environment:dev
server.port=8762
spring.application.name=servidor-eureka-${environment}
host=localhost
httpprotocol=http
context=eureka
eureka.instance.hostname:${host}
spring.security.user.name=jofrantoba
spring.security.user.password=jofrantoba
eureka.client.service-url.defaultZone=${httpprotocol}://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/${context}/
eureka.instance.preferIpAddress:true
eureka.server.use-read-only-response-cache:false
eureka.server.response-cache-auto-expiration-in-seconds:10
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
#Eureka Expira
eureka.server.enable-self-preservation=false
eureka.server.eviction-interval-timer-in-ms=9000
#eureka.instance.health-check-url=/actuator/health
#eureka.server.statusPageUrl: http://${eureka.instance.hostname}:${server.port}/actuator/info
#eureka.server.healthCheckUrl: http://${eureka.instance.hostname}:${server.port}/actuator/health
#eureka.client.healthcheck.enabled=true
#eureka.client.healthcheck.interval=5
#eureka.server.expected-client-renewal-interval-seconds=5
#eureka.server.eviction-policy=weak
#eureka.server.renewal-threshold-update-interval-ms=5000
#eureka.server.renewal-percent-threshold=0.85
#eureka.server.eviction-duration-time-in-seconds=10
#eureka.server.renewal-percent-threshold=0.5
#eureka.server.responseCacheUpdateInvervalMs
#eureka.server.wait-time-in-ms-when-sync-empty=10000

# Elastic APM
elastic.apm.enabled=false
elastic.apm.service_name=servidor-eureka-${environment}
elastic.apm.application_packages=gob.pe.icl.eureka
elastic.apm.log_file=d:/log/apm-servidor-eureka.log
elastic.apm.log-level=INFO