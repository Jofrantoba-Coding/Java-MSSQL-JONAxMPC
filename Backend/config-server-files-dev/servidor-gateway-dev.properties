environment:dev
server.hostname=127.0.0.1
server.port=8090
spring.application.name=servidor-gateway-${environment}
spring.application.instance-name=${environment}0-node1
eureka.instance.instance-id = ${environment}:${server.hostname}:${spring.application.name}:${spring.application.instance-name}:${server.port}
spring.cloud.gateway.discovery.locator.enabled=true
eureka.instance.lease-renewal-interval-in-seconds=30
#server.tomcat.threads.max=10

# Elastic APM
elastic.apm.enabled=false
elastic.apm.service_name=${spring.application.name}
elastic.apm.application_packages=gob.pe.icl.gateway
elastic.apm.log_file=d:/log/apm-servidor-gateway.log
elastic.apm.log-level=INFO

#LOAD BALANCER
spring.cloud.loadbalancer.ribbon.server-list-refresh-interval=5000

#CORS
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true

#Gateway as OAuth 2.0 Resource Server Token opaque
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri:http://172.16.1.226:3690/realms/catastro/protocol/openid-connect/token/introspect
spring.security.oauth2.resourceserver.opaquetoken.client-id:web_app_catastro
spring.security.oauth2.resourceserver.opaquetoken.client-secret:47toSiQusxCTWs58EFmujBAWjrmxxTaM

# APIS
#Mantenimientos
spring.cloud.gateway.routes[0].id=api-mantenimientos-${environment}
spring.cloud.gateway.routes[0].uri=lb://api-mantenimientos-${environment}
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/mantenimientos/**
spring.cloud.gateway.httpclient.api-mantenimientos.response-timeout=3000
#Reportes
spring.cloud.gateway.routes[1].id=api-reportes-${environment}
spring.cloud.gateway.routes[1].uri=lb://api-reportes-${environment}
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/reportes/**
spring.cloud.gateway.httpclient.api-reportes.response-timeout=600000
#Files
spring.cloud.gateway.routes[2].id=api-files-s1-${environment}
spring.cloud.gateway.routes[2].uri=lb://api-files-s1-${environment}
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/files/s1/**
spring.cloud.gateway.httpclient.api-files-s1.response-timeout=600000

#Filters:
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials
spring.cloud.gateway.default-filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin

spring.codec.max-in-memory-size=2048MB
spring.webflux.multipart.max-file-size=2048MB
spring.webflux.multipart.max-request-size=2048MB

#spring.cloud.gateway.httpclient.connect-timeout=10000 # Timeout de conexi√≥n en milisegundos (10 segundos)
#spring.cloud.gateway.httpclient.response-timeout=60000 # Timeout de respuesta en milisegundos (60 segundos)
#spring.cloud.gateway.httpclient.connect-timeout=45000
#spring.cloud.gateway.httpclient.response-timeout=3s
spring.cloud.gateway.max-response-header-size=4096MB

